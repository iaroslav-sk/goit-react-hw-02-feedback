{"version":3,"sources":["components/Statistic/Statistics.module.css","components/Statistic/FeedbackOptions.jsx","components/Statistic/StatisticList.jsx","components/Statistic/Notification.jsx","components/Counter/Section.js","App.js","index.js"],"names":["module","exports","FeedbackOptions","handleGood","handleBad","handleNeutral","className","styles","title","type","btn","onClick","statisticTitle","StatisticList","good","neutral","bad","countTotalFeedback","countPositiveFeedbackPercentage","list","item","Notification","message","Section","state","setState","prevState","toFixed","wrapper","this","titule","actualStatistic","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iIACAA,EAAOC,QAAU,CAAC,QAAU,4BAA4B,MAAQ,0BAA0B,eAAiB,mCAAmC,IAAM,wBAAwB,KAAO,yBAAyB,KAAO,2B,mJC8BpMC,EA1BS,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAYC,EAAf,EAAeA,UAAWC,EAA1B,EAA0BA,cAA1B,OACtB,qCACE,oBAAIC,UAAWC,IAAOC,MAAtB,mCACA,wBAAQC,KAAK,SAASH,UAAWC,IAAOG,IAAKC,QAAS,kBAAMR,KAA5D,kBAGA,wBACEM,KAAK,SACLH,UAAWC,IAAOG,IAClBC,QAAS,kBAAMN,KAHjB,qBAOA,wBAAQI,KAAK,SAASH,UAAWC,IAAOG,IAAKC,QAAS,kBAAMP,KAA5D,iBAGA,oBAAIE,UAAWC,IAAOK,eAAtB,4BCaWC,EA5BO,SAAC,GAAD,IACpBC,EADoB,EACpBA,KACAC,EAFoB,EAEpBA,QACAC,EAHoB,EAGpBA,IACAC,EAJoB,EAIpBA,mBACAC,EALoB,EAKpBA,gCALoB,OAOpB,mCACE,qBAAIZ,UAAWC,IAAOY,KAAtB,UACE,qBAAIb,UAAWC,IAAOa,KAAtB,mBAAmCN,KACnC,qBAAIR,UAAWC,IAAOa,KAAtB,sBAAsCL,KACtC,qBAAIT,UAAWC,IAAOa,KAAtB,kBAAkCJ,KAClC,qBAAIV,UAAWC,IAAOa,KAAtB,oBAAoCH,OACpC,qBAAIX,UAAWC,IAAOa,KAAtB,+BACqBF,IADrB,aCLSG,EARM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,oBAAIhB,UAAWC,IAAOK,eAAtB,SAAuCU,KCgE1BC,E,4MAhEbC,MAAQ,CACNV,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPb,WAAa,WACX,EAAKsB,UAAS,SAAAC,GAAS,MAAK,CAC1BZ,KAAMY,EAAUZ,KAAO,O,EAI3BV,UAAY,WACV,EAAKqB,UAAS,SAAAC,GAAS,MAAK,CAC1BV,IAAKU,EAAUV,IAAM,O,EAIzBX,cAAgB,WACd,EAAKoB,UAAS,SAAAC,GAAS,MAAK,CAC1BX,QAASW,EAAUX,QAAU,O,EAIjCE,mBAAqB,WACnB,OAAO,EAAKO,MAAMV,KAAO,EAAKU,MAAMT,QAAU,EAAKS,MAAMR,K,EAG3DE,gCAAkC,WAChC,OACG,EAAKM,MAAMV,MACT,EAAKU,MAAMT,QAAU,EAAKS,MAAMR,IAAM,EAAKQ,MAAMV,MACpD,KACAa,QAAQ,I,4CAGZ,WACE,OACE,sBAAKrB,UAAWC,IAAOqB,QAAvB,UACE,oBAAItB,UAAWC,IAAOC,MAAtB,SAA8BqB,KAAKC,SACnC,cAAC,EAAD,CACEC,gBAAiBF,KAAKL,MACtBrB,WAAY0B,KAAK1B,WACjBC,UAAWyB,KAAKzB,UAChBC,cAAewB,KAAKxB,gBAES,IAA9BwB,KAAKZ,qBACJ,cAAC,EAAD,CACEH,KAAMe,KAAKL,MAAMV,KACjBC,QAASc,KAAKL,MAAMT,QACpBC,IAAKa,KAAKL,MAAMR,IAChBC,mBAAoBY,KAAKZ,mBACzBC,gCACEW,KAAKX,kCAIT,cAAC,EAAD,CAAcI,QAAQ,6B,GA1DVU,IAAMC,WCKbC,EARH,WACV,OACE,8BACE,cAAC,EAAD,CAASJ,OAAQ,6B,YCAvBK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f8fb52b9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Statistics_wrapper__2_ekI\",\"title\":\"Statistics_title__2lBb2\",\"statisticTitle\":\"Statistics_statisticTitle__6HOhZ\",\"btn\":\"Statistics_btn__2lO61\",\"list\":\"Statistics_list__AiaXY\",\"item\":\"Statistics_item__2KbBZ\"};","// Component //\r\nimport PropTypes from 'prop-types';\r\n// style //\r\nimport styles from '../Statistic/Statistics.module.css';\r\n\r\nconst FeedbackOptions = ({ handleGood, handleBad, handleNeutral }) => (\r\n  <>\r\n    <h1 className={styles.title}>Please leave feedback</h1>\r\n    <button type=\"button\" className={styles.btn} onClick={() => handleGood()}>\r\n      Good\r\n    </button>\r\n    <button\r\n      type=\"button\"\r\n      className={styles.btn}\r\n      onClick={() => handleNeutral()}\r\n    >\r\n      Neutral\r\n    </button>\r\n    <button type=\"button\" className={styles.btn} onClick={() => handleBad()}>\r\n      Bad\r\n    </button>\r\n    <h2 className={styles.statisticTitle}>Statistics</h2>\r\n  </>\r\n);\r\n\r\nFeedbackOptions.propTypes = {\r\n  handleGood: PropTypes.func.isRequired,\r\n  handleBad: PropTypes.func.isRequired,\r\n  handleNeutral: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from '../Statistic/Statistics.module.css';\r\n\r\nconst StatisticList = ({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  countTotalFeedback,\r\n  countPositiveFeedbackPercentage,\r\n}) => (\r\n  <>\r\n    <ul className={styles.list}>\r\n      <li className={styles.item}>Good: {good}</li>\r\n      <li className={styles.item}>Neutral: {neutral}</li>\r\n      <li className={styles.item}>Bad: {bad}</li>\r\n      <li className={styles.item}>Total: {countTotalFeedback()}</li>\r\n      <li className={styles.item}>\r\n        Positiv feedback: {countPositiveFeedbackPercentage()}%\r\n      </li>\r\n    </ul>\r\n  </>\r\n);\r\n\r\nStatisticList.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  countTotalFeedback: PropTypes.func.isRequired,\r\n  countPositiveFeedbackPercentage: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default StatisticList;\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from '../Statistic/Statistics.module.css';\r\n\r\nconst Notification = ({ message }) => (\r\n  <h3 className={styles.statisticTitle}>{message}</h3>\r\n);\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\nimport styles from '../Statistic/Statistics.module.css';\r\nimport FeedbackOptions from '../Statistic/FeedbackOptions.jsx';\r\nimport StatisticList from '../Statistic/StatisticList.jsx';\r\nimport Notification from '../Statistic/Notification.jsx';\r\n\r\nclass Section extends React.Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  handleGood = () => {\r\n    this.setState(prevState => ({\r\n      good: prevState.good + 1,\r\n    }));\r\n  };\r\n\r\n  handleBad = () => {\r\n    this.setState(prevState => ({\r\n      bad: prevState.bad + 1,\r\n    }));\r\n  };\r\n\r\n  handleNeutral = () => {\r\n    this.setState(prevState => ({\r\n      neutral: prevState.neutral + 1,\r\n    }));\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    return this.state.good + this.state.neutral + this.state.bad;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    return (\r\n      (this.state.good /\r\n        (this.state.neutral + this.state.bad + this.state.good)) *\r\n      100\r\n    ).toFixed(0);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.wrapper}>\r\n        <h1 className={styles.title}>{this.titule}</h1>\r\n        <FeedbackOptions\r\n          actualStatistic={this.state}\r\n          handleGood={this.handleGood}\r\n          handleBad={this.handleBad}\r\n          handleNeutral={this.handleNeutral}\r\n        />\r\n        {this.countTotalFeedback() !== 0 ? (\r\n          <StatisticList\r\n            good={this.state.good}\r\n            neutral={this.state.neutral}\r\n            bad={this.state.bad}\r\n            countTotalFeedback={this.countTotalFeedback}\r\n            countPositiveFeedbackPercentage={\r\n              this.countPositiveFeedbackPercentage\r\n            }\r\n          />\r\n        ) : (\r\n          <Notification message=\"No feedback given\" />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport Section from './components/Counter/Section';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <Section titule={'Please leave feedback'} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './main.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}